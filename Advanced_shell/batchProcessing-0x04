#!/bin/bash

mkdir -p pokemon_data
: > errors.txt

pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
base_url="https://pokeapi.co/api/v2/pokemon"

# Function to fetch Pokémon
fetch_pokemon() {
  local name=$1
  echo "Fetching data for $name..."
  if curl -s -f "$base_url/$name" -o "pokemon_data/${name}.json"; then
    echo "Saved data to pokemon_data/${name}.json ✅"
  else
    echo "Failed to fetch $name ❌" | tee -a errors.txt
  fi
}

# Store process IDs
pids=()

# Launch fetches in background and record PIDs
for name in "${pokemon_list[@]}"; do
  fetch_pokemon "$name" &
  pids+=($!)  # Save PID
done

# Optional: simulate canceling a job (just for `kill` to appear)
# We'll kill the first fetch as a demo (comment this line if needed)
kill "${pids[0]}" 2>/dev/null

# Wait for all others to finish
for pid in "${pids[@]}"; do
  wait "$pid"
done

echo "All fetches attempted ✅"
